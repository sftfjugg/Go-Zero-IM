// Code generated by goctl. DO NOT EDIT.
package types

type RegisterRequest struct {
	UserName string `json:"user_name"`
	NickName string `json:"nick_name"`
	Password string `json:"password"`
	Mobile   string `json:"mobile"`
}

type LoginRequest struct {
	UserName string `json:"user_name"`
	Password string `json:"password"`
}

type JwtTokenResponse struct {
	AccessToken  string `json:"access_token"`
	AccessExpire int64  `json:"access_expire"`
	RefreshAfter int64  `json:"refresh_after"`
	WsToken      int64  `json:"ws_token"`
}

type UserInfoRequest struct {
}

type UserInfoResponse struct {
	Id       int64  `json:"id"`
	UserName string `json:"user_name"`
	NickName string `json:"nick_name"`
	Password string `json:"password"`
	Mobile   string `json:"mobile"`
}

type UserListRequest struct {
	Keyword string `json:"keyword"`
}

type UserList struct {
	Id       int64  `json:"id"`
	IsFriend int64  `json:"is_friend"`
	NickName string `json:"nick_name"`
}

type UserListResponse struct {
	List []UserList `json:"list"`
}

type FriendRequest struct {
	FriendId int64 `json:"friend_id"`
}

type FriendResponse struct {
	Status  bool   `json:"status"`
	Message string `json:"message"`
}

type SearchUsersRequest struct {
	NickName string `json:"nick_name"`
}

type FriendHandleRequest struct {
	ActionLogId int64 `json:"action_log_id"`
	ActionType  int64 `json:"action_type"`
}

type Friend struct {
	UserId    int64  `json:"user_id"`
	NickName  string `json:"nick_name"`
	IsFriend  int64  `json:"is_friend"`
	ChannelId string `json:"channel_id"`
}

type FriendList struct {
	List []Friend `json:"list"`
}

type MessageListRequest struct {
	ChannelId    string `json:"channel_id"`
	MinMessageId int64  `json:"min_message_id"`
}

type Message struct {
	UserId   int64  `json:"user_id"`
	Tp       int64  `json:"type"`
	NickName string `json:"nick_name"`
	Content  string `json:"content"`
	SendTime string `json:"send_time"`
}

type MessageListResponse struct {
	List []Message `json:"list"`
}

type Notice struct {
	Id         int64  `json:"id"`
	Tp         int64  `json:"type"`
	LinkId     int64  `json:"link_id"`
	IsAgree    string `json:"is_agree"`
	NickName   string `json:"nick_name"`
	Content    string `json:"content"`
	CreateTime string `json:"create_time"`
	Status     int64  `json:"status"`
}

type NoticeListResponse struct {
	List []Notice `json:"list"`
}

type GroupRequest struct {
}

type Response struct {
	Message string `json:"message"`
}

type GroupAddRequest struct {
	Title       string `json:"title"`
	Description string `json:"description"`
}

type GroupEditRequest struct {
	GroupId     int64  `json:"group_id"`
	Title       string `json:"title"`
	Description string `json:"description"`
}

type GroupDelRequest struct {
	GroupId int64 `json:"group_id"`
}

type GroupJoinRequest struct {
	GroupId int64  `json:"group_id"`
	Note    string `json:"note"`
}

type GroupOutRequest struct {
	GroupId int64 `json:"group_id"`
}

type GroupRemoveRequest struct {
	GroupId int64 `json:"group_id"`
	UserId  int64 `json:"user_id"`
}

type GroupJoinHandleRequest struct {
	JoinId     int64 `json:"join_id"`
	ActionType int64 `json:"action_type"`
}

type Group struct {
	Id          int64  `json:"id"`
	Title       string `json:"title"`
	Description string `json:"description"`
	ChannelId   string `json:"channel_id"`
	IsManager   int64  `json:"is_manager"`
}

type GroupListResponse struct {
	List []Group `json:"list"`
}

type GroupSreachRequest struct {
	Title string `json:"title"`
}

type GroupSreachResponse struct {
	Id          int64  `json:"id"`
	Title       string `json:"title"`
	Description string `json:"description"`
	IsJoin      int64  `json:"is_join"`
	Manager     string `json:"manager"`
}
